export abstract class AuthingError extends Error {
  public code: number;
  public data: any;
  protected constructor(code: number, message: string, data?: any) {
    super(message);
    if (DOC_ERRORCODE.indexOf(code) >= 0) {
      this.code = code; // 排除已在官网中展示的errorCode：https://docs.authing.cn/v2/reference/error-code.html
    } else {
      this.code = this.getPrefixCode() * 10000 + code;
    }
    this.data = data;
  }
  // 抽象方法，由子类实现，获取模块异常前缀代码
  protected abstract getPrefixCode(): number;
}

// 已在文档中显示的都不进行替换
const DOC_ERRORCODE = [
  500,
  1000,
  1001,
  2000,
  2001,
  2002,
  2003,
  2004,
  2005,
  2006,
  2007,
  2008,
  2009,
  2010,
  2011,
  2012,
  2013,
  2014,
  2015,
  2016,
  2017,
  2018,
  2019,
  2020,
  2021,
  2022,
  2023,
  2024,
  2025,
  2026,
  2027,
  2028,
  2029,
  2030,
  2031,
  2032,
  2034,
  2035,
  2036,
  2037,
  2038,
  2039,
  2040,
  2100,
  2101,
  2200,
  2201,
  2202,
  2203,
  2204,
  2205,
  2206,
  2207,
  2208,
  2209,
  2210,
  2211,
  2212,
  2213,
  2214,
  2215,
  2216,
  2217,
  2218,
  2219,
  2220,
  2221,
  2222,
  2223,
  2224,
  2225,
  2226,
  2227,
  2228,
  2229,
  2230,
  2231,
  2300,
  2401,
  3012,
  3013,
  3014,
  3617,
  3618,
  3619,
  3620,
  3621,
  3622,
  3623,
  3624,
  3829,
  4212,
  5000,
  5001,
  5022,
  5023,
  5024,
  5025,
  7348,
  8128,
];
