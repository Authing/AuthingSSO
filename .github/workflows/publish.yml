# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Authing SSO CI

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Please enter your github name'
        required: true
      email:
        description: 'Please enter your github email'
        required: true
      version:
        description: 'Please enter your release version'
        required: true
        
jobs:

  readyGo:

    runs-on: ubuntu-latest

    env: 
      PUBLISH_OPTS: ${{ github.ref_name == 'master' && '--verbose' || '--verbose --tag=alpha' }}
      
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          
      - name: before scripts
        run: |
          echo "Current branch: ${{ github.ref_name }}"
          echo "Current publish version: ${{ github.event.inputs.version }}"
          echo "Current user.name: ${{ github.event.inputs.name }}"
          echo "Current user.email: ${{ github.event.inputs.email }}"
          
      - name: publish
        run: |
          npm install yarn -g
          yarn
          yarn test
          yarn clean
          npm run build
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm version $VERESION
          npm publish $PUBLISH_OPTS
        env:
          VERESION: ${{ github.event.inputs.version }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      
      - name: upload-oss
        if: ${{ github.ref_name == 'master' }}
        run: |
          yarn oss accessKeyId=$OSS_KEY_ID accessKeySecret=$OSS_KEY_SECRET
        env:
          OSS_KEY_ID: ${{ secrets.OSS_KEY_ID }}
          OSS_KEY_SECRET: ${{ secrets.OSS_KEY_SECRET }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      
      - name: set-git-config
        run: |
          git config --global user.email ${{ github.event.inputs.email }}
          git config --global user.name ${{ github.event.inputs.name }}
    
      - name: release
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.VERESION }}",
              sha: context.sha
            })
        env:
          VERESION: ${{ github.event.inputs.version }}
